{"version":3,"sources":["componets/SearchBar.jsx","componets/Navbar.jsx","hooks/useFetch.js","componets/RecipeList.jsx","pages/home/Home.jsx","pages/create/Create.jsx","pages/search/Search.jsx","pages/recipe/Recipe.jsx","App.js","index.js"],"names":["SearchBar","useState","term","setTerm","searchNavigate","useNavigate","className","onSubmit","e","preventDefault","htmlFor","type","id","onChange","target","value","required","Navbar","to","useFetch","url","method","data","setData","isPending","setIsPending","error","setError","options","setOptions","postData","headers","body","JSON","stringify","useEffect","controller","AbortController","fetchData","fecthOptions","a","fetch","signal","res","ok","Error","statusText","json","name","console","log","abort","RecipeList","recipeList","length","map","recipe","title","cookingTime","substring","Home","Create","setTitle","setMethod","setCookingTime","newIngredients","setNewIngredients","ingredients","setIngredients","ingredientsInput","useRef","navigate","ref","onClick","ing","trim","includes","prevIngredients","current","focus","ings","cols","rows","Search","queryString","useLocation","search","query","URLSearchParams","get","resultSearch","Recipe","useParams","App","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6dcd99e.chunk.js","sourcesContent":["import \"./SearchBar.css\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst SearchBar = () => {\r\n  const [term, setTerm] = useState(\"\");\r\n  const searchNavigate = useNavigate();\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    searchNavigate(`/search?q=${term}`);\r\n  };\r\n  return (\r\n    <div className=\"searchbar\">\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"search\">Search:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"search\"\r\n          onChange={(e) => setTerm(e.target.value)}\r\n          required\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import \"./Navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchBar from \"./SearchBar\";\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <nav>\r\n        <Link to=\"/\" className=\"brand\">\r\n          Cooking Recipe\r\n        </Link>\r\n\r\n        <SearchBar />\r\n        <Link to=\"/create\">Create Recipe</Link>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { useState, useEffect } from \"react\";\n\nexport const useFetch = (url, method = \"GET\") => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(false);\n  const [error, setError] = useState(null);\n  const [options, setOptions] = useState(null);\n  const postData = (postData) => {\n    setOptions({\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(postData),\n    });\n  };\n  useEffect(() => {\n    const controller = new AbortController();\n\n    const fetchData = async (fecthOptions) => {\n      setIsPending(true);\n\n      try {\n        const res = await fetch(url, {\n          ...fecthOptions,\n          signal: controller.signal,\n        });\n        if (!res.ok) {\n          throw new Error(res.statusText);\n        }\n        const data = await res.json();\n\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      } catch (err) {\n        if (err.name === \"AbortError\") {\n          console.log(\"the fetch was aborted\");\n        } else {\n          setIsPending(false);\n          setError(\"Could not fetch the data\");\n        }\n      }\n    };\n\n    if (method === \"GET\") {\n      fetchData();\n    }\n    if ((method = \"POST\" && options)) {\n      fetchData(options);\n    }\n    return () => {\n      controller.abort();\n    };\n  }, [url, options, method]);\n\n  return { data, isPending, error, postData };\n};\n","import \"./RecipeList.css\";\r\nimport { Link } from \"react-router-dom\";\r\nconst RecipeList = ({ recipeList }) => {\r\n  if (recipeList.length === 0) {\r\n    return <div className=\"error\">Recipes No Found</div>;\r\n  }\r\n  return (\r\n    <div className=\"recipe-list\">\r\n      {recipeList.map((recipe) => (\r\n        <div key={recipe.id} className=\"card\">\r\n          <h3>{recipe.title}</h3>\r\n          <p>{recipe.cookingTime} to make</p>\r\n          <div>{recipe.method.substring(0, 100)}</div>\r\n          <Link to={`/recipes/${recipe.id}`}>Cook This</Link>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeList;\r\n","import \"./Home.css\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\n\r\n//Import Components\r\nimport RecipeList from \"../../componets/RecipeList\";\r\nconst Home = () => {\r\n  const {\r\n    data: recipe,\r\n    isPending,\r\n    error,\r\n  } = useFetch(\"http://localhost:3000/recipes\");\r\n  return (\r\n    <div className=\"home\">\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {isPending && <p className=\"loading\">Loading .....</p>}\r\n      {recipe && <RecipeList recipeList={recipe} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import \"./Create.css\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst Create = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [method, setMethod] = useState(\"\");\r\n  const [cookingTime, setCookingTime] = useState(\"\");\r\n  const [newIngredients, setNewIngredients] = useState(\"\");\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const ingredientsInput = useRef(null);\r\n  const navigate = useNavigate();\r\n  const { postData, data, error } = useFetch(\r\n    \"http://localhost:3000/recipes\",\r\n    \"POST\"\r\n  );\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    postData({\r\n      title,\r\n      ingredients,\r\n      method,\r\n      cookingTime: cookingTime + \"Minutes\",\r\n    });\r\n  };\r\n\r\n  const handleAdd = (e) => {\r\n    e.preventDefault();\r\n\r\n    const ing = newIngredients.trim();\r\n    if (ing && !ingredients.includes(ing)) {\r\n      setIngredients((prevIngredients) => [...prevIngredients, newIngredients]);\r\n    }\r\n    setNewIngredients(\"\");\r\n    ingredientsInput.current.focus();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [data]);\r\n  return (\r\n    <div className=\"create\">\r\n      <h2 className=\"page-title\">Add A New Recipe</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          <span>Recipe Title:</span>\r\n          <input\r\n            type=\"text\"\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            value={title}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          <span>Recipe Ingredents:</span>\r\n          <div className=\"ingredients\">\r\n            <input\r\n              type=\"text\"\r\n              onChange={(e) => setNewIngredients(e.target.value)}\r\n              value={newIngredients}\r\n              ref={ingredientsInput}\r\n            />\r\n            <button onClick={handleAdd} className=\"btn\">\r\n              Add\r\n            </button>\r\n          </div>\r\n        </label>\r\n        <p>\r\n          Current Ingredients:\r\n          {ingredients.map((ings) => (\r\n            <em key={ings}>{ings}, </em>\r\n          ))}\r\n        </p>\r\n\r\n        <label>\r\n          <span>Recipe Method:</span>\r\n          <textarea\r\n            cols=\"30\"\r\n            rows=\"10\"\r\n            onChange={(e) => setMethod(e.target.value)}\r\n            value={method}\r\n            required\r\n          ></textarea>\r\n        </label>\r\n\r\n        <label>\r\n          <span>Cooking Time (in minutes):</span>\r\n          <input\r\n            type=\"number\"\r\n            onChange={(e) => setCookingTime(e.target.value)}\r\n            value={cookingTime}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button className=\"btn\"> Submit </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","import { useLocation } from \"react-router-dom\";\r\nimport \"./Search.css\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport RecipeList from \"../../componets/RecipeList\";\r\n\r\nconst Search = () => {\r\n  const queryString = useLocation().search;\r\n  const queryParams = new URLSearchParams(queryString);\r\n  const query = queryParams.get(\"q\");\r\n  const url = \"http://localhost:3000/recipes?q=\" + query;\r\n  const { error, isPending, data: resultSearch } = useFetch(url);\r\n  return (\r\n    <div className=\"search\">\r\n      <h2 className=\"page-title\">Recipe Include \"{query}\"</h2>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {isPending && <p className=\"loading\">Loading ...</p>}\r\n      {resultSearch && <RecipeList recipeList={resultSearch} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import \"./Recipe.css\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Recipe = () => {\r\n  const { id } = useParams();\r\n  const url = \"http://localhost:3000/recipes/\" + id;\r\n  const { data: recipe, isPending, error } = useFetch(url);\r\n\r\n  return (\r\n    <div className=\"recipe\">\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {isPending && <p className=\"loading\">Loading ....</p>}\r\n      {recipe && (\r\n        <>\r\n          <h2 className=\"page-title\">{recipe.title}</h2>\r\n          <p>{recipe.cookingTime} to cook </p>\r\n          <ul>\r\n            {recipe.ingredients.map((ing) => (\r\n              <li key={ing}>{ing}</li>\r\n            ))}\r\n          </ul>\r\n          <p className=\"method\">{recipe.method}</p>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import \"./App.css\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\n// Pages Components\nimport Navbar from \"./componets/Navbar\";\nimport Home from \"./pages/home/Home\";\nimport Create from \"./pages/create/Create\";\nimport Search from \"./pages/search/Search\";\nimport Recipe from \"./pages/recipe/Recipe\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Navbar />\n        <Routes>\n          <Route exact path=\"/\" element={<Home />}></Route>\n          <Route path=\"/create\" element={<Create />}></Route>\n          <Route path=\"/search\" element={<Search />}></Route>\n          <Route path=\"/recipes/:id\" element={<Recipe />}></Route>\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}